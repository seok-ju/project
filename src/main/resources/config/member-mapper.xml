<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberDao">
		<!-- 로그인, 특정 아이디 정보출력 -->
        <select id="info" parameterType="String" resultType="memberVO">
        	select * from (SELECT * FROM MEMBER WHERE ID = #{id}) where MEM = '회원' or MEM='관리자'
        </select>
        
        <!-- 회원 리스트 출력 -->
        <select id="list" resultType="memberVO">
        	SELECT * FROM MEMBER ORDER BY NUM
        </select>
        
        <!-- 회원가입 -->
        <insert id="signUp" parameterType="memberVO">
        	INSERT INTO MEMBER (NUM, ID, PW, NAME, ADDR, PHONE, EMAIL, MEM)
        	VALUES (MEMBER_SEQ.nextval, #{id}, #{pw}, #{name}, #{addr}, #{phone}, #{email}, #{mem})
        </insert>
        
        <!-- 회원 삭제 -->
        <delete id="signDown" parameterType="memberVO">
        	DELETE FROM MEMBER WHERE WHERE ID = #{id}
        </delete>
        
        <!-- 정보수정 -->
        <update id="update" parameterType="memberVO">
        	UPDATE MEMBER SET PW = #{pw}, ADDR = #{addr}, PHONE = #{phone}, EMAIL = #{email}
        	WHERE ID = #{id}
        </update>
        
        <select id="idcheck" parameterType="String" resultType="Integer">
	      SELECT COUNT(*) FROM member WHERE id = #{id}
		</select>
		<select id="chkAuth" parameterType="memberVO" resultType="memberVO">
			select * from (select * from MEMBER where EMAIL = #{email}) where MEM = #{mem}
		</select>
		<update id="createAuthKey" parameterType="memberVO">
			update MEMBER set MEM = #{mem} where EMAIL = #{email}
		</update>
		
		<update id="userAuth" parameterType="memberVO">
			update MEMBER set MEM='회원' where EMAIL = #{email} and MEM = #{mem}
		</update>
</mapper>
